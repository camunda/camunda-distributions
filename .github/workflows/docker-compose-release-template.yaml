# NOTE: Camunda Docker Compose release is a rolling release.
# So it's always 1 artifact per Camunda minor version.
name: "Docker Compose | Release - Template"

on:
  workflow_call:
    inputs:
      camunda-version:
        description: Camunda minor version in format x.y.
        required: true
        type: string

env:
  DOCKER_COMPOSE_NAME: docker-compose-${{ inputs.camunda-version }}
  DOCKER_COMPOSE_WORKING_DIRECTORY: docker-compose/versions/camunda-${{ inputs.camunda-version }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      #
      # Init.
      - name: ℹ️ Print workflow inputs ℹ️
        env:
          GITHUB_CONTEXT: ${{ toJson(inputs) }}
        run: |
          echo "Workflow Inputs:"
          echo "${GITHUB_CONTEXT}"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ github.ref }}

      #
      # Artifacts.
      - name: Create release artifact
        run: |
          cd ${{ env.DOCKER_COMPOSE_WORKING_DIRECTORY }}
          zip -r ${{ env.DOCKER_COMPOSE_NAME }}.zip .
          # Copy the artifact to repo root dir.
          mv ${{ env.DOCKER_COMPOSE_NAME }}.zip $(git rev-parse --show-toplevel)

      #
      # Security signature.
      - name: Install Cosign CLI
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1
      - name: Sign Helm chart with Cosign
        run: |
          cosign sign-blob -y ${{ env.DOCKER_COMPOSE_NAME }}.zip \
            --bundle ${{ env.DOCKER_COMPOSE_NAME }}.cosign.bundle
      - name: Verify signed Helm chart with Cosign
        run: |
          cosign verify-blob ${{ env.DOCKER_COMPOSE_NAME }}.zip \
            --bundle ${{ env.DOCKER_COMPOSE_NAME }}.cosign.bundle \
            --certificate-identity "https://github.com/${{ github.repository }}/.github/workflows/docker-compose-release-template.yaml@${{ github.ref }}" \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com"

      #
      # Release
      # TODO: Use gomplate to generate the Docker Compose release notes.
      - name: Create release notes
        run: |
          grep _VERSION ${{ env.DOCKER_COMPOSE_WORKING_DIRECTORY }}/.env > VERSIONS.txt
          cat << EOF > RELEASE-NOTES.md
          $(cat ${{ env.DOCKER_COMPOSE_WORKING_DIRECTORY }}/README.md) 
          ## Versions
          $(printf -- "- %s\n" $(cat VERSIONS.txt))
          ## Verification
          To verify the integrity of the artifact using [Cosign](https://docs.sigstore.dev/signing/quickstart/):
          \`\`\`shell
          # Download Docker Compose artifact.
          curl -LO https://github.com/${{ github.repository }}/releases/download/${{ env.DOCKER_COMPOSE_NAME }}/${{ env.DOCKER_COMPOSE_NAME }}.zip
          # Download Docker Compose Cosign bundle.
          curl -LO https://github.com/${{ github.repository }}/releases/download/${{ env.DOCKER_COMPOSE_NAME }}/${{ env.DOCKER_COMPOSE_NAME }}.cosign.bundle
          # Verify with cosign.
          cosign verify-blob ${{ env.DOCKER_COMPOSE_NAME }}.zip \\
            --bundle ${{ env.DOCKER_COMPOSE_NAME }}.cosign.bundle \\
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \\
            --certificate-identity "https://github.com/${{ github.repository }}/.github/workflows/docker-compose-release-template.yaml@${{ github.ref }}"
          \`\`\`
          ## Notes
          - **Release strategy:** Camunda Docker Compose release is a rolling release. Hence, it's always 1 artifact per Camunda minor version.
          - **Latest update:** $(date)
          EOF
      - name: Clean up old release
        env:
          GH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        run: |
          gh release list | tee | grep -v idp-enabled | grep "${{ env.DOCKER_COMPOSE_NAME }}" &&
            gh release delete ${{ env.DOCKER_COMPOSE_NAME }} --cleanup-tag
          # To avoid race condition when the release is created again.
          sleep 5
      - name: Create git tag
        run: |
          git tag ${{ env.DOCKER_COMPOSE_NAME }}
      - name: Release on GitHub
        id: gh-release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2
        with:
          name: ${{ env.DOCKER_COMPOSE_NAME }}
          tag_name: ${{ env.DOCKER_COMPOSE_NAME }}
          body_path: RELEASE-NOTES.md
          draft: false
          files: |
            ${{ env.DOCKER_COMPOSE_NAME }}.zip
            ${{ env.DOCKER_COMPOSE_NAME }}.cosign.bundle
      - name: Add release URL to workflow summary
        run: |
          echo "⭐ Release URL: ${{steps.gh-release.outputs.url}}" >> $GITHUB_STEP_SUMMARY
