{
  description: "Keeps Docker Compose up to date",
  packageRules: [
    // Disable Minor and Major updates by default.
    {
      enabled: false,
      matchFileNames: ["docker-compose/versions/**"],
      matchUpdateTypes: ["minor", "major"],
    },
    // Disable unsupported Camunda versions.
    {
      enabled: false,
      matchFileNames: [
        "docker-compose/versions/camunda-8.0/**",
        "docker-compose/versions/camunda-8.1/**",
        "docker-compose/versions/camunda-8.2/**",
      ],
    },
    // Set global config.
    {
      addLabels: ["deps/docker-compose"],
      semanticCommitScope: "docker-compose",
      matchFileNames: ["docker-compose/versions/**"],
    },

    //
    // Main groups.
    // This section should be updated with the Camunda supported versions.
    // Start of minor cycle chores.
    {
      groupName: "camunda-docker-compose-8.3",
      addLabels: ["version/8.3", "deps/docker-compose"],
      matchFileNames: ["docker-compose/versions/camunda-8.3/**"],
      matchUpdateTypes: ["patch"],
      // Ignore non-semver versions like 8.6.0-alpha3-rc3 which has a higher precedence than 8.6.0-alpha3 which is not the case.
      "versionCompatibility": "^(?<version>\\d+\.\\d+\.\\d+-alpha[1-6])(?<compatibility>.*)$",
      "versioning": "semver"
    },
    {
      groupName: "camunda-docker-compose-8.4",
      addLabels: ["version/8.4", "deps/docker-compose"],
      matchFileNames: ["docker-compose/versions/camunda-8.4/**"],
      matchUpdateTypes: ["patch"],
      // Ignore non-semver versions like 8.6.0-alpha3-rc3 which has a higher precedence than 8.6.0-alpha3 which is not the case.
      "versionCompatibility": "^(?<version>\\d+\.\\d+\.\\d+-alpha[1-6])(?<compatibility>.*)$",
      "versioning": "semver"
    },
    {
      groupName: "camunda-docker-compose-8.5",
      addLabels: ["version/8.5", "deps/docker-compose"],
      matchFileNames: ["docker-compose/versions/camunda-8.5/**"],
      matchUpdateTypes: ["patch"],
      // Ignore non-semver versions like 8.6.0-alpha3-rc3 which has a higher precedence than 8.6.0-alpha3 which is not the case.
      "versionCompatibility": "^(?<version>\\d+\.\\d+\.\\d+-alpha[1-6])(?<compatibility>.*)$",
      "versioning": "semver"
    },
    {
      groupName: "camunda-docker-compose-8.6",
      addLabels: ["version/8.6", "deps/docker-compose"],
      matchFileNames: ["docker-compose/versions/camunda-8.6/**"],
      matchUpdateTypes: ["patch"],
      // Ignore non-semver versions like 8.6.0-alpha3-rc3 which has a higher precedence than 8.6.0-alpha3 which is not the case.
      "versionCompatibility": "^(?<version>\\d+\.\\d+\.\\d+-alpha[1-6])(?<compatibility>.*)$",
      "versioning": "semver"
    },
    {
      groupName: "camunda-docker-compose-alpha",
      addLabels: ["version/8.7", "deps/docker-compose"],
      matchFileNames: ["docker-compose/versions/camunda-alpha/**"],
      matchUpdateTypes: ["patch", "minor"],
      // Ignore non-semver versions like 8.6.0-alpha3-rc3 which has a higher precedence than 8.6.0-alpha3 which is not the case.
      "versionCompatibility": "^(?<version>\\d+\.\\d+\.\\d+-alpha[1-6])(?<compatibility>.*)$",
      "versioning": "semver"
    },
    // End of minor cycle chores.

    // Disable auto-merge for alpha release candidates.
    {
      matchNewValue: "/.*alpha[0-9]*-rc[0-9]*/",
      automerge: false,
    },
  ],

  customManagers: [
    {
      customType: "regex",
      fileMatch: [".env"],
      datasourceTemplate: "docker",
      matchStrings: [
        "# renovate: datasource=docker depName=(?<depName>[^\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\s]+?))?\\s*?(\\S+)=(?<currentValue>\\S+)",
      ],
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
    },
  ],
}
